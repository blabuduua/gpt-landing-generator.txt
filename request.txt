"Hi, ChatGPT! Please analyze this css and screenshot of a landing page and create self-contained, interchangeable section templates that include HTML, CSS, and JS within the same template. The global HTML tags (`<html>`, `<body>`) and global CSS settings should be written in `base.html`, which is a Python templating file.

The report should contain the following elements:

1. The number of sections on the landing page.
2. The detailed HTML structure, CSS, and JS of each section, all within a single template file for each section.
3. Always include `header.html` and `footer.html` files.
4. Ensure each section template is self-contained with its own HTML. Write the CSS in a `<style>` tag before the HTML content and the JS in a `<script>` tag after the HTML content.
5. Include responsive design considerations for mobile devices in the CSS.
6. If there is a menu, implement a hamburger menu for the mobile version.
7. Extract all texts into a `content.json` file and use templating placeholders in the templates. All texts should be fully written out, avoiding any abbreviations or incomplete phrases. Ensure that all placeholders are written in a flat structure, such as `{{footer_contacts}}` instead of `{{footer.contacts}}`.
8. Write global CSS styles within the `<style>` tag in `base.html` for `*`, `html`, and `body` only.
9. Ensure image paths are written directly in the HTML, following the same convention, e.g., `image_path` instead of `image.path`.
10. Include a `<script>` tag with the necessary JavaScript after the HTML content in each template.

In each template file, there should only be the `<style>`, `header`, `footer`, `section`, and `<script>` tags, with the `<style>` tag before the HTML content and the `<script>` tag after the HTML content.

Here is the css and screenshot.

Please provide a complete report with these details and include the appropriate self-contained template files for each section, ensuring all CSS is within `<style>` tags placed before the HTML content and JS is within `<script>` tags placed after the HTML content in the same template file. Use placeholders in the templates to insert texts from `content.json`, writing the full text in all tags without abbreviations or omissions, and ensuring all placeholder variables are flat, such as `{{footer_contacts}}` instead of `{{footer.contacts}}`."

-------
генерация текста

Please generate a JSON file with new texts for absolutely all keys in the file. Only consider the keys and the requirement that each description should be 500+ characters long, except for headers which should be a single word. The text should be written in the same language as the example text. Use the following rules:

If the value is "text", generate a 500+ character long text.
If the value is a number (1, 2, 3, 4, 5, 6, 7, 8, 9, 10), generate that number of words.
If the value is "path", use a placeholder for the image path.
Here is the example structure for reference:

content

following structure


-------
генерация картинок 


Create a highly photorealistic image tailored to the provided context. Focus on achieving a visually appealing and balanced composition by carefully considering the background, placement of visual elements, and empty spaces. Ensure the heading is prominently displayed as a design element without any actual text in the final image. Fill the background with elements that are relevant and enhance the given theme and context. Prioritize including human figures in the image to make it more engaging and relatable. Do not include any actual text in the image.